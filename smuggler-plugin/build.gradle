apply plugin: "java-library"
apply plugin: "kotlin"
apply plugin: "idea"
apply from: "$rootDir/pablo.gradle"

targetCompatibility = javaVersion
sourceCompatibility = javaVersion

dependencies {
  relocate project(":smuggler-compiler")

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

  compileOnly gradleApi()
  compileOnly "com.android.tools.build:gradle:$androidToolsVersion"
  compileOnly "com.android.tools.build:gradle-api:$androidToolsVersion"
}

def generatedDir = new File(projectDir, "generated")
def generatedJavaSourcesDir = new File(generatedDir, "main/java")

task generateBuildClass {
  def hash = "git rev-parse HEAD".execute([], project.rootDir).text.trim()

  inputs.property('version', version)
  inputs.property('hash', hash)
  outputs.dir generatedDir

  doLast {
    def buildClassFile = new File(generatedJavaSourcesDir, "com/joom/smuggler/plugin/BuildConfig.java")
    buildClassFile.parentFile.mkdirs()
    buildClassFile.text = "" +
        "package com.joom.smuggler.plugin;\n" +
        "\n" +
        "public class BuildConfig {\n" +
        "  public static final String VERSION = \"$version\";\n" +
        "  public static final String GIT_HASH = \"$hash\";\n" +
        "}\n"
  }
}

sourceSets {
  main {
    output.dir(builtBy: tasks.generateBuildClass, generatedJavaSourcesDir)
    java.srcDirs += generatedJavaSourcesDir
  }
}

tasks.matching { it instanceof AbstractCompile }.forEach {
  it.dependsOn tasks.generateBuildClass
}

clean.doFirst {
  delete generatedDir
}

idea {
  module {
    generatedSourceDirs += generatedJavaSourcesDir
  }
}

pablo {
  artifactName = "smuggler-plugin"

  shadow {
    relocate "com.joom.smuggler"
  }
}
